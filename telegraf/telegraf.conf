[global_tags]
  balena_sense_id = "$BALENASENSE_ID"

[agent]
  round_interval = true
  metric_batch_size = 1000
  metric_buffer_limit = 10000
  collection_jitter = "0s"
  flush_interval = "10s"
  flush_jitter = "0s"
  debug = false
  quiet = false
  omit_hostname = false

# InternalInfluxDB
[[outputs.influxdb]]
  urls = ["http://influxdb:8086"]
  database = "balena-sense"
  timeout = "1s"
# EndInternalInfluxDB

# MQTTOutput
#[[outputs.mqtt]]
#  servers = ["$TELEGRAF_MQTT_URL_PORT_OUT"]
#  topic_prefix = "balena-sense"
#  qos = 2
#  data_format = "json"
# EndMQTTOutput

# MQTTInput
#[[inputs.mqtt_consumer]]
#  servers = ["$TELEGRAF_MQTT_URL_PORT_IN"]
#  qos = 0
#  topics = ["balena-sense/c4f3ecc/balena-sense"]
#  data_format = "json"
#  name_override = "mqtt"
# EndMQTTInput

# InfluxDBCloud
#[[outputs.influxdb_v2]]
#  urls = ["https://eu-central-1-1.aws.cloud2.influxdata.com/"]
#  token = "$INFLUX_TOKEN"
#  organization = "$INFLUX_ORG"
#  bucket = "$INFLUX_BUCKET"
# EndInfluxDBCloud

# ExternalInfluxDB
#[[outputs.influxdb]]
#  urls = ["$INFLUXDB_EXTERNAL_URL"]
#  database = "balena-sense"
#  timeout = "1s"
#  username = "$INFLUXDB_EXTERNAL_USERNAME"
#  password = "$INFLUXDB_EXTERNAL_PASSWORD"
# EndExternalInfluxDB

[[inputs.http]]
  urls = [
    "http://sensor"
  ]

  interval = "10s"
  timeout = "1s"
  data_format = "json"
  name_override = "balena-sense"

[[inputs.http]]
  urls = [
    "http://stib"
  ]

  interval = "30s"
  timeout = "30s"
  data_format = "json"
  name_override = "stib-mvib"

[[processors.converter]]
  [processors.converter.fields]
    integer = ["air_quality_score_accuracy"]

[[inputs.http]]
  urls = [
    "https://api.darksky.net/forecast/cf04933c057f9932b8154904ee749bf8/50.845234,%204.415981?units=si"
  ]

  interval = "2m"
  timeout = "1s"
  data_format = "json"
  name_override = "darksky"


